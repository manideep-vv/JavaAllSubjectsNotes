package com.santu.springBatchByRaghucsvH2.runner;

import java.util.List;

public class frescoPlay {
    public static void main(String[] args) {

        roverMove(4, List.of("RIGHT", "DOWN", "LEFT", "LEFT", "DOWN"));
    }

    public static int roverMove(int matrixSize, List<String> cmds) {
        int element = 0;
        int i = 0;
        int j = 0;

        for (String direction : cmds) {
            direction = direction.toUpperCase();

            switch (direction) {
                case "RIGHT":
                    j = getIndex(j + 1, matrixSize);
                    break;
                case "LEFT":
                    j = getIndex(j - 1, matrixSize);
                    break;
                case "UP":
                    i = getIndex(i - 1, matrixSize);
                    break;
                case "DOWN":
                    i = getIndex(i + 1, matrixSize);
                    break;
                default:
                    throw new RuntimeException("wrong inpt");
            }
        }
        System.out.println("the current index value is "+getIndexValue(i,j,matrixSize));
        return element;
    }


    public static int getIndex(int currentRow, int matrixSize) {
        if (currentRow >= 0 && currentRow < matrixSize) {
            return currentRow;
        } else if (currentRow < 0) {
            return 0;
        } else {
            return matrixSize - 1;
        }
    }

    public static int getIndexValue(int row, int column, int matrixSize) {
        return (row * matrixSize) + column;
    }
}
